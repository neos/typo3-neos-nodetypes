# Menu TS Object - extends TYPO3.Neos:Menu and is rendering menus inserted as content elements
prototype(TYPO3.Neos.NodeTypes:Menu) < prototype(TYPO3.Neos:Menu) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/Menu.html'
	entryLevel = ${q(node).property('startLevel')}
	entryLevel.@process.1 = ${String.toInteger(value)}
	maximumLevels = ${q(node).property('maximumLevels')}
	maximumLevels.@process.1 = ${String.toInteger(value)}
}

# HTML TS Object
prototype(TYPO3.Neos.NodeTypes:Html) < prototype(TYPO3.Neos:Template)
prototype(TYPO3.Neos.NodeTypes:Html) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/Html.html'
	source = ${q(node).property('source')}
}

# Headline TS Object
prototype(TYPO3.Neos.NodeTypes:Headline) < prototype(TYPO3.Neos:Template)
prototype(TYPO3.Neos.NodeTypes:Headline) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/Headline.html'
	title = ${q(node).property('title')}
}

# Image TS Object
prototype(TYPO3.Neos.NodeTypes:Image) < prototype(TYPO3.Neos:Template)
prototype(TYPO3.Neos.NodeTypes:Image) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/Image.html'
	image = ${q(node).property('image')}
	alignment = ${q(node).property('alignment')}
	alternativeText = ${q(node).property('alternativeText')}
	title = ${q(node).property('title')}
	link = ${q(node).property('link')}
	hasCaption = ${q(node).property('hasCaption')}
	caption = ${q(node).property('caption')}
	maximumWidth = 2560
	maximumHeight = 2560
	imageClassName = ''
}

# Text TS Object
prototype(TYPO3.Neos.NodeTypes:Text) < prototype(TYPO3.Neos:Template)
prototype(TYPO3.Neos.NodeTypes:Text) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/Text.html'
	text = ${q(node).property('text')}
}

# TextWithImage TS Object
prototype(TYPO3.Neos.NodeTypes:TextWithImage) < prototype(TYPO3.Neos.NodeTypes:Image)
prototype(TYPO3.Neos.NodeTypes:TextWithImage) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/TextWithImage.html'
	text = ${q(node).property('text')}
	position = ${q(node).property('position')}
}

# Basic implementation of a flexible MultiColumn element, not exposed directly but inherited by all specific MultiColumn content elements
prototype(TYPO3.Neos.NodeTypes:MultiColumn) < prototype(TYPO3.Neos:Template)
prototype(TYPO3.Neos.NodeTypes:MultiColumn) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/MultiColumn.html'
	layout = ${q(node).property('layout')}
	className = ${'container columns-' + this.layout}
	columns = TYPO3.TypoScript:Collection
	columns {
		collection = ${q(node).children('[instanceof TYPO3.Neos:ContentCollection]')}
		itemRenderer = TYPO3.Neos.NodeTypes:MultiColumnItem
		itemName = 'node'
	}
}

# Abstract render definition for a single content column in a multi column element
prototype(TYPO3.Neos.NodeTypes:MultiColumnItem) < prototype(TYPO3.Neos:Template)
prototype(TYPO3.Neos.NodeTypes:MultiColumnItem) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/MultiColumnItem.html'
	className = 'column'
	columnContent = TYPO3.Neos:ContentCollection
	columnContent {
		nodePath = '.'
	}
}

# Two Column TS Object
prototype(TYPO3.Neos.NodeTypes:TwoColumn) < prototype(TYPO3.Neos.NodeTypes:MultiColumn)

# Three Column TS Object
prototype(TYPO3.Neos.NodeTypes:ThreeColumn) < prototype(TYPO3.Neos.NodeTypes:MultiColumn)

# Four Column TS Object
prototype(TYPO3.Neos.NodeTypes:FourColumn) < prototype(TYPO3.Neos.NodeTypes:MultiColumn)

# Form TS Object
prototype(TYPO3.Neos.NodeTypes:Form) < prototype(TYPO3.Neos:Template)
prototype(TYPO3.Neos.NodeTypes:Form) {
	templatePath = 'resource://TYPO3.Neos.NodeTypes/Private/Templates/TypoScriptObjects/Form.html'
	formIdentifier = ${q(node).property('formIdentifier')}
	presetName = 'default'
}
